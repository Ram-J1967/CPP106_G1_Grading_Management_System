/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gradingsystemnamin;

import java.util.Random;
import javax.swing.JOptionPane;
import java.io.FileWriter;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author CC6828
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
         initTable(); 
        loadStudentsFromFile(); 
        generateRandomStudentNumber();     
    }
    private void initTable() {
        String[] columnNames = {"Name", "Student Number", "Prelim", "Midterm", "Final", "Final Rating", "Remarks"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        jTable1.setModel(model);
    }

    
    //used to retrieve information from text file
    private void loadStudentsFromFile() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    try (BufferedReader br = new BufferedReader(new FileReader("students.txt"))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            if (data.length >= 9) { 
                model.addRow(new Object[]{data[0] + " " + data[1], data[2], data[6], data[7], data[8], "", ""});
            } else {
                System.err.println("Invalid data: " + line);
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error loading student data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    //save grades to text file
    private void saveGradesToFile() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    try (FileWriter writer = new FileWriter("grades.txt", true)) {  
        for (int i = 0; i < model.getRowCount(); i++) {
            String name = (String) model.getValueAt(i, 0);
            String studentNumber = (String) model.getValueAt(i, 1);
            String prelim = (String) model.getValueAt(i, 2);
            String midterm = (String) model.getValueAt(i, 3);
            String final_grade = (String) model.getValueAt(i, 4);
            String final_rating = model.getValueAt(i, 5).toString(); // final rating
            String remarks = (String) model.getValueAt(i, 6);
            
            // Write to file
            writer.write(name + "," + studentNumber + "," + prelim + "," + midterm + "," +
                final_grade + "," + final_rating + "," + remarks + "\n");
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "An error occurred while saving grades.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    //refresh table content
    private void refreshTable() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);  
    loadStudentsFromFile();  
}
    private void calculatefinalRating() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        try {
            int prelim_grade = Integer.parseInt(model.getValueAt(i, 2).toString());
            int midterm_grade = Integer.parseInt(model.getValueAt(i, 3).toString());
            int final_grade = Integer.parseInt(model.getValueAt(i, 4).toString());
            
            // compute the final rating
            double final_rating = (prelim_grade * 0.3) + (midterm_grade * 0.3) + (final_grade * 0.4);
            
            // append final ratin
            model.setValueAt(final_rating, i, 5);
            
            // Set the remarks based on the final rating
            String remarks = final_rating < 60 ? "FAILED" : "PASSED";
            model.setValueAt(remarks, i, 6);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input in row " + (i + 1), "Error", JOptionPane.ERROR_MESSAGE);
            model.setValueAt(0, i, 5); 
        }
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        AddStudent = new javax.swing.JPanel();
        Firstname = new javax.swing.JTextField();
        Lastname = new javax.swing.JTextField();
        Age = new javax.swing.JTextField();
        Section = new javax.swing.JTextField();
        Yearlevel = new javax.swing.JTextField();
        SubmitButton = new javax.swing.JButton();
        Studentnumber = new javax.swing.JLabel();
        Welcomelabel = new javax.swing.JLabel();
        Prelim = new javax.swing.JTextField();
        Midterm = new javax.swing.JTextField();
        Final = new javax.swing.JTextField();
        Drop = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Midtermtab = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddStudent.setBackground(new java.awt.Color(8, 0, 125));

        Firstname.setBackground(new java.awt.Color(0, 102, 204));
        Firstname.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Firstname.setForeground(new java.awt.Color(255, 255, 255));
        Firstname.setText("First Name");

        Lastname.setBackground(new java.awt.Color(0, 102, 204));
        Lastname.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Lastname.setForeground(new java.awt.Color(255, 255, 255));
        Lastname.setText("Last Name");

        Age.setBackground(new java.awt.Color(0, 102, 204));
        Age.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Age.setForeground(new java.awt.Color(255, 255, 255));
        Age.setText("Age");
        Age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeActionPerformed(evt);
            }
        });

        Section.setBackground(new java.awt.Color(0, 102, 204));
        Section.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Section.setForeground(new java.awt.Color(255, 255, 255));
        Section.setText("Section");
        Section.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SectionActionPerformed(evt);
            }
        });

        Yearlevel.setBackground(new java.awt.Color(0, 102, 204));
        Yearlevel.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Yearlevel.setForeground(new java.awt.Color(255, 255, 255));
        Yearlevel.setText("Year Level");

        SubmitButton.setFont(new java.awt.Font("Futura Extra", 1, 14)); // NOI18N
        SubmitButton.setForeground(new java.awt.Color(0, 51, 102));
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        Studentnumber.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Studentnumber.setForeground(new java.awt.Color(255, 255, 255));
        Studentnumber.setText("Student Number");

        Welcomelabel.setFont(new java.awt.Font("Neuron Heavy", 0, 12)); // NOI18N
        Welcomelabel.setForeground(new java.awt.Color(255, 255, 255));
        Welcomelabel.setText("Welcome, Aspins!");

        Prelim.setBackground(new java.awt.Color(0, 102, 204));
        Prelim.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Prelim.setForeground(new java.awt.Color(255, 255, 255));
        Prelim.setText("Prelim Grade");
        Prelim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrelimActionPerformed(evt);
            }
        });

        Midterm.setBackground(new java.awt.Color(0, 102, 204));
        Midterm.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Midterm.setForeground(new java.awt.Color(255, 255, 255));
        Midterm.setText("Midterm Grade");
        Midterm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MidtermActionPerformed(evt);
            }
        });

        Final.setBackground(new java.awt.Color(0, 102, 204));
        Final.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        Final.setForeground(new java.awt.Color(255, 255, 255));
        Final.setText("Final Grade");
        Final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalActionPerformed(evt);
            }
        });

        Drop.setFont(new java.awt.Font("Futura Extra", 1, 12)); // NOI18N
        Drop.setForeground(new java.awt.Color(0, 0, 153));
        Drop.setText("Drop ");
        Drop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Drop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica", 0, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Yaw q, na Sayo Nak");

        javax.swing.GroupLayout AddStudentLayout = new javax.swing.GroupLayout(AddStudent);
        AddStudent.setLayout(AddStudentLayout);
        AddStudentLayout.setHorizontalGroup(
            AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddStudentLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Drop, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(AddStudentLayout.createSequentialGroup()
                        .addGroup(AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Final)
                            .addGroup(AddStudentLayout.createSequentialGroup()
                                .addGroup(AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Midterm)
                                    .addComponent(SubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Studentnumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Welcomelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Prelim)
                                    .addComponent(Yearlevel)
                                    .addComponent(Section, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Age)
                                    .addComponent(Firstname)
                                    .addComponent(Lastname))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        AddStudentLayout.setVerticalGroup(
            AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Welcomelabel)
                .addGap(55, 55, 55)
                .addComponent(Firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Studentnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Yearlevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Prelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Midterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SubmitButton)
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Drop)
                .addGap(55, 55, 55))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));

        jTable1.setBackground(new java.awt.Color(0, 102, 204));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Student Number", "Prelim", "Midterm", "Final", "Final Rating", "Remarks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Midtermtab.addTab("Dashboard", jScrollPane1);

        jLabel1.setFont(new java.awt.Font("Futura Extra", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("International State College of the Philippines");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Midtermtab, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Midtermtab, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(AddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(AddStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
     String firstName = Firstname.getText().trim();
    String lastName = Lastname.getText().trim();
    String age = Age.getText().trim();
    String section = Section.getText().trim();
    String yearLevel = Yearlevel.getText().trim();
    String studentNumber = Studentnumber.getText().replace("Student Number: ", "");
    String prelim_grade = Prelim.getText().trim();
    String midterm_grade = Midterm.getText().trim();
    String final_grade = Final.getText().trim();

    // Check if all fields are filled
    if (firstName.isEmpty() || lastName.isEmpty() || age.isEmpty() || section.isEmpty() || yearLevel.isEmpty() || prelim_grade.isEmpty() || midterm_grade.isEmpty() || final_grade.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields must be filled!", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        
        saveStudentToFile(firstName, lastName, studentNumber, age, section, yearLevel, prelim_grade, midterm_grade, final_grade);

        
        JOptionPane.showMessageDialog(this, "Student information submitted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        
        refreshTable();

        
        calculatefinalRating();
        
        
        generateRandomStudentNumber();
    }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void DropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropActionPerformed
      DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int selectedRow = jTable1.getSelectedRow();  // Get the selected row
    
    // Check if a row is selected
    if (selectedRow != -1) {
        // Confirm deletion
        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to drop this student?", "Confirm Drop", JOptionPane.YES_NO_OPTION);
        
        if (confirmation == JOptionPane.YES_OPTION) {
            // Remove the selected row from the table
            model.removeRow(selectedRow);
            
            // Update the file after removing the student by calling updateStudentsFile
            updateStudentsFile(); 
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a student to drop.", "No Selection", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_DropActionPerformed

    private void MidtermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MidtermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MidtermActionPerformed

    private void PrelimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrelimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrelimActionPerformed

    private void FinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FinalActionPerformed

    private void SectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SectionActionPerformed

    private void AgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AgeActionPerformed
    
    // Modify the method to accept parameters for student information
private void saveStudentToFile(String firstName, String lastName, String studentNumber, String age, String section, String yearLevel, String prelim_grade, String midterm_grade, String final_grade) {
    try {
        // Open the file in append mode (true) so new data doesn't overwrite existing data
        FileWriter writer = new FileWriter("students.txt", true);
        
        // Write the student data as a comma-separated line
        writer.write(firstName + "," + lastName + "," + studentNumber + "," + age + "," + section + "," + yearLevel + "," + prelim_grade + "," + midterm_grade + "," + final_grade + "\n");
        
        // Close the writer to save changes
        writer.close();
    } catch (IOException e) {
        // Display an error message if there's an issue saving the student information
        JOptionPane.showMessageDialog(this, "An error occurred while saving student information.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

           

private void updateStudentsFile() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    
    try (FileWriter writer = new FileWriter("students.txt", false)) { // Open in overwrite mode (false)
        for (int i = 0; i < model.getRowCount(); i++) {
            String name = (String) model.getValueAt(i, 0);
            String studentNumber = (String) model.getValueAt(i, 1);
            String prelim = (String) model.getValueAt(i, 2);
            String midterm = (String) model.getValueAt(i, 3);
            String finalGrade = (String) model.getValueAt(i, 4);
            String finalRating = model.getValueAt(i, 5).toString();
            String remarks = (String) model.getValueAt(i, 6);
            
            // update file
            writer.write(name + "," + studentNumber + "," + prelim + "," + midterm + "," + finalGrade + "," + finalRating + "," + remarks + "\n");
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "An error occurred while updating student data.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    
    //generate unique student number for a new student
    private void generateRandomStudentNumber() {
    int randomNum = new Random().nextInt(100000) + 1; 
    Studentnumber.setText("Student Number: " + randomNum);
    
    
    
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddStudent;
    private javax.swing.JTextField Age;
    private javax.swing.JButton Drop;
    private javax.swing.JTextField Final;
    private javax.swing.JTextField Firstname;
    private javax.swing.JTextField Lastname;
    private javax.swing.JTextField Midterm;
    private javax.swing.JTabbedPane Midtermtab;
    private javax.swing.JTextField Prelim;
    private javax.swing.JTextField Section;
    private javax.swing.JLabel Studentnumber;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel Welcomelabel;
    private javax.swing.JTextField Yearlevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
